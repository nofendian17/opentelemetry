# ================================
# Application Configuration
# ================================
APP_PORT=8080

# ================================
# OpenTelemetry Configuration
# ================================

# Service configuration
OTEL_SERVICE_NAME=go-app
OTEL_SERVICE_VERSION=v1.0.0
OTEL_SERVICE_NAMESPACE=

# Exporter configuration
# OTEL_EXPORTER_OTLP_PROTOCOL: The protocol to use for the OTLP exporter.
# Can be "http" or "grpc". Defaults to "http" if not set.
OTEL_EXPORTER_OTLP_PROTOCOL=http
OTEL_EXPORTER_OTLP_ENDPOINT=localhost:4318
OTEL_EXPORTER_OTLP_INSECURE=true

# Basic Auth for OTLP
OTEL_EXPORTER_OTLP_USERNAME=otel
OTEL_EXPORTER_OTLP_PASSWORD=otelpassword

# Telemetry component names
OTEL_TRACER_NAME=go-app-tracer
OTEL_METER_NAME=go-app-meter

# Logging configuration
# OTEL_LOG_VERBOSITY: Controls the verbosity of logs
# 0 = minimal (errors only)
# 1 = standard (errors and warnings)
# 2 = verbose (all messages)
OTEL_LOG_VERBOSITY=2

# Log output configuration
# OTEL_LOG_OUTPUT: Controls where logs are sent
# "stdout" = standard output (default)
# "stderr" = standard error
# "otel" = only to OpenTelemetry collector (no stdout/stderr)
OTEL_LOG_OUTPUT=stdout

# OTEL_LOG_FORMAT: Controls the format of stdout/stderr logs
# "text" = human-readable text format (default)
# "json" = structured JSON format
OTEL_LOG_FORMAT=text

# Middleware configuration
# DISABLE_BODY_LOGGING: Set to true to disable request/response body logging
# Useful in production to reduce memory usage and avoid logging sensitive data
DISABLE_BODY_LOGGING=false

# Export configuration
OTEL_EXPORT_INTERVAL_SECS=60
OTEL_EXPORT_TIMEOUT_SECS=30
OTEL_MAX_QUEUE_SIZE=10000
OTEL_BATCH_TIMEOUT_SECS=5

# ================================
# PostgreSQL Configuration
# ================================

# Database connection string
# Format: postgres://username:password@host:port/database?options
POSTGRES_DSN=postgres://beni:Password123@localhost:5432/test?sslmode=disable

# Connection pool configuration
POSTGRES_MAX_OPEN_CONNS=25
POSTGRES_MAX_IDLE_CONNS=10
POSTGRES_CONN_MAX_LIFETIME=5
POSTGRES_CONN_MAX_IDLE_TIME=5

# ================================
# Redis Configuration
# ================================

# Connection settings
REDIS_ADDR=localhost:6379
REDIS_PASSWORD=
REDIS_DB=0

# Connection pool configuration
REDIS_MAX_RETRIES=3
REDIS_DIAL_TIMEOUT=5
REDIS_READ_TIMEOUT=3
REDIS_WRITE_TIMEOUT=3
REDIS_POOL_SIZE=10
REDIS_MIN_IDLE_CONNS=2
REDIS_MAX_CONN_AGE=30
REDIS_POOL_TIMEOUT=4
REDIS_IDLE_TIMEOUT=5

# ================================
# Kafka Configuration
# ================================

# Broker configuration
KAFKA_BROKERS=localhost:9092
KAFKA_TOPIC=go-app-events
KAFKA_CONSUMER_GROUP=go-app-consumer-group

# Performance tuning
KAFKA_BATCH_SIZE=100
KAFKA_DIAL_TIMEOUT=15
KAFKA_CONN_IDLE_TIME=20
